<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!-- Checkstyle Configuration -->
<module name="Checker">
    <property
        name="severity"
        value="warning" />
    <property
        name="basedir"
        value="${basedir}" />
    <module name="JavadocPackage">
        <!-- Checks that a package-info.java file exists for each package. -->
        <property
            name="allowLegacy"
            value="false" />
    </module>
    <module name="FileLength" />
    <module name="FileTabCharacter" />
    <module name="NewlineAtEndOfFile" />
    <module name="RegexpSingleline">
        <property
            name="severity"
            value="ignore" />
        <property
            name="format"
            value="\s+$" />
        <property
            name="message"
            value="Line has trailing spaces." />
        <metadata
            name="net.sf.eclipsecs.core.lastEnabledSeverity"
            value="inherit" />
    </module>
    <module name="SuppressionCommentFilter">
        <property
            name="offCommentFormat"
            value="CHECKSTYLE\:OFF\: ([\w\|]+)" />
        <property
            name="onCommentFormat"
            value="CHECKSTYLE\:ON\: ([\w\|]+)" />
        <property
            name="checkFormat"
            value="$1" />
    </module>
    <module name="SuppressionFilter">
        <property
            name="file"
            value="${basedir}/checkstyle-suppressions.xml" />
    </module>
    <module name="SuppressWithNearbyCommentFilter">
        <property
            name="commentFormat"
            value="CHECKSTYLE IGNORE (\w+) FOR NEXT (\d+) LINE" />
        <property
            name="influenceFormat"
            value="$2" />
    </module>
    <module name="Translation" />
    <module name="TreeWalker">
        <property
            name="tabWidth"
            value="4" />
        <module name="ArrayTypeStyle" />
        <!-- <module name="AvoidNestedBlocks"/> -->
        <module name="AvoidStarImport" />
        <module name="ConstantName" />
        <module name="ConstantNameCheck">
            <!-- Validates non-private, static, final fields against the 
                supplied public/package final fields "^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$". -->
            <metadata
                name="altname"
                value="ConstantName" />
            <property
                name="applyToPublic"
                value="true" />
            <property
                name="applyToProtected"
                value="true" />
            <property
                name="applyToPackage"
                value="true" />
            <property
                name="applyToPrivate"
                value="false" />
            <property
                name="format"
                value="^([A-Z][A-Z0-9]*(_[A-Z0-9]+)*|FLAG_.*)$" />
            <message
                key="name.invalidPattern"
                value="Variable ''{0}'' should be in ALL_CAPS (if it is a constant) or be private (otherwise)." />
            <property
                name="severity"
                value="warning" />
        </module>
        <module name="EmptyBlock">
            <property
                name="option"
                value="text" />
        </module>
        <module name="CovariantEquals" />
        <!-- <module name="DeclarationOrder" /> -->
        <module name="DefaultComesLast" />
        <module name="DoubleCheckedLocking" />
        <!-- <module name="EmptyForIteratorPad" /> -->
        <module name="EmptyStatement" />
        <module name="EqualsAvoidNull" />
        <module name="EqualsHashCode" />
        <module name="ExplicitInitialization" />
        <module name="FallThrough">
            <!-- Warn about falling through to the next case statement. Similar 
                to javac -Xlint:fallthrough, but the check is suppressed if a single-line 
                comment on the last non-blank line preceding the fallen-into case contains 
                'fall through' (or some other variants which we don't publicized to promote 
                consistency). -->
            <property
                name="reliefPattern"
                value="fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on" />
            <property
                name="severity"
                value="error" />
        </module>
        <module name="FileContentsHolder" />
        <module name="FinalClass" />
        <!-- <module name="FinalParameters"/> -->
        <module name="HiddenField">
            <property
                name="tokens"
                value="VARIABLE_DEF" />
        </module>
        <!-- <module name="HideUtilityClassConstructor" /> -->
        <module name="IllegalCatch" />
        <module name="IllegalImport" />
        <module name="IllegalInstantiation" />
        <module name="IllegalThrows" />
        <!-- <module name="IllegalType" /> -->
        <!-- <module name="ImportOrder"/> -->
        <!-- <module name="InnerAssignment"/> -->
        <module name="InterfaceIsType" />
        <module name="JavadocMethod">
            <property
                name="scope"
                value="protected" />
            <!-- <property name="allowMissingThrowsTags" value="true"/> -->
            <!-- <property name="allowMissingReturnTag" value="true"/> -->
            <!-- <property name="allowMissingJavadoc" value="true"/> -->
            <!-- <property name="allowMissingPropertyJavadoc" value="true"/> -->
            <!-- <property name="logLoadErrors" value="true"/> -->
        </module>
        <module name="JavadocType">
            <property
                name="scope"
                value="protected" />
        </module>
        <module name="JavadocVariable">
            <property
                name="scope"
                value="protected" />
        </module>
        <module name="JavadocStyle">
            <property
                name="checkEmptyJavadoc"
                value="true" />
        </module>
        <module name="JUnitTestCase" />
        <!-- <module name="LeftCurly" /> -->
        <module name="LocalFinalVariableName">
            <!-- Validates identifiers for local final variables against 
                the expression "^[a-z][a-zA-Z0-9]*$". -->
        </module>
        <module name="LocalVariableName">
            <!-- Validates identifiers for local variables against the expression 
                "^[a-z][a-zA-Z0-9]*$". -->
        </module>
        <!-- <module name="MagicNumber" /> -->
        <module name="MemberName">
            <!-- <property name="format" value="^m[A-Z][a-zA-Z0-9]*$"/> -->
            <property
                name="format"
                value="^[a-z][a-zA-Z0-9]*(_[a-zA-Z0-9]+)*$" />
        </module>
        <module name="MethodLength" />
        <module name="MethodNameCheck">
            <metadata
                name="altname"
                value="MethodName" />
            <property
                name="format"
                value="^[a-z][a-zA-Z0-9]*(_[a-zA-Z0-9]+)*$" />
        </module>
        <module name="MethodParamPad" />
        <module name="MissingDeprecated" />
        <module name="MissingOverride" />
        <module name="MissingSwitchDefault" />
        <module name="ModifierOrder">
            <!-- Warn if modifiers are in the prescribed order: public, protected, 
                private, abstract, static, final, transient, volatile, synchronized, native, 
                strictfp -->
        </module>
        <module name="MultipleVariableDeclarations" />
        <module name="NeedBraces" />
        <module name="NoClone" />
        <module name="NoFinalizer" />
        <module name="NoWhitespaceAfter">
            <property
                name="tokens"
                value="BNOT,DEC,DOT,INC,LNOT,UNARY_MINUS,UNARY_PLUS" />
        </module>
        <module name="NoWhitespaceBefore" />
        <module name="OperatorWrap" />
        <module name="PackageDeclaration" />
        <module name="PackageName">
            <property
                name="format"
                value="^[a-z]+(\.[a-z][A-Za-z0-9]{1,})*_?$" />
        </module>
        <module name="ParameterAssignment" />
        <module name="ParameterName">
            <!-- Validates identifiers for method parameters against the 
                expression "^[a-z][a-zA-Z0-9]*$". -->
            <property
                name="severity"
                value="warning" />
        </module>
        <module name="ParameterNumber" />
        <!-- <module name="ParenPad" /> -->
        <!-- <module name="RightCurly" /> -->
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />
        <module name="StaticVariableName" />
        <module name="StaticVariableNameCheck">
            <!-- Validates static, non-final fields against the supplied 
                expression "^[a-z][a-zA-Z0-9]*_?$". -->
            <metadata
                name="altname"
                value="StaticVariableName" />
            <property
                name="applyToPublic"
                value="true" />
            <property
                name="applyToProtected"
                value="true" />
            <property
                name="applyToPackage"
                value="true" />
            <property
                name="applyToPrivate"
                value="true" />
            <property
                name="format"
                value="^[a-z][a-zA-Z0-9]*_?$" />
            <property
                name="severity"
                value="warning" />
        </module>
        <module name="StringLiteralEquality" />
        <module name="SuperClone" />
        <module name="RedundantImport" />
        <module name="RedundantModifier" />
        <module name="RedundantThrows">
            <property
                name="suppressLoadErrors"
                value="true" />
        </module>
        <module name="TodoComment">
            <property
                name="severity"
                value="ignore" />
            <metadata
                name="net.sf.eclipsecs.core.lastEnabledSeverity"
                value="inherit" />
        </module>
        <module name="TypecastParenPad" />
        <module name="TypeName" />
        <module name="TypeNameCheck">
            <!-- Validates static, final fields against the expression "^[A-Z][a-zA-Z0-9]*$". -->
            <metadata
                name="altname"
                value="TypeName" />
            <property
                name="severity"
                value="warning" />
        </module>
        <!-- <module name="UnusedImports" /> -->
        <module name="UpperEll" />
        <!-- <module name="VisibilityModifier"/> -->
        <!-- <module name="WhitespaceAround"/> -->
    </module>
</module>
